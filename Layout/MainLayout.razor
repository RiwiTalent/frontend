@page "/mypage"
@inherits LayoutComponentBase
@using riwi.Services
@using riwi.Theme
@inject AuthService AuthService
@inject NavigationManager navManager
@inject NavigationManager NavigationManager




<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode"></MudThemeProvider>
<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <NavLink class="nav-link riwi-image-content" href="" Match="NavLinkMatch.All">
                <img class="riwi-image" src="images/riwi.png"/>
            </NavLink>
        <MudSpacer />
        <MudAvatar Color="Color.Primary">D</MudAvatar>
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

<CascadingBlazoredModal></CascadingBlazoredModal>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = false;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = CustomMudTheme.PaletteLight,
            PaletteDark = CustomMudTheme.PaletteDark,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    
    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        false => @Icons.Material.Outlined.WbSunny,
        true => Icons.Material.Outlined.DarkMode,
    };
}

<style>
    .riwi-image {
        width: 103px;
        height: 30px;
    }
</style>