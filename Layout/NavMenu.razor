@using riwi.Theme;




<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @* <div class="nav-item px-3">
            <NavLink class="nav-link riwi-image-content" href="" Match="NavLinkMatch.All">
                <img class="riwi-image" src="./images/riwi.png"/>
            </NavLink>
        </div> *@
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All"
                     @onmouseover="() => HoverIcon(1, true)"
                     @onmouseout="() => HoverIcon(1, false)">
                <MudIcon Icon="@Icons.Material.Rounded.PersonOutline" Style="@($"color:{iconColors[1]};")"/>
                <p class="text_Navmenu" style="@($"color:{iconColors[1]};")">Coders</p>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All"
                     @onmouseover="() => HoverIcon(2, true)"
                     @onmouseout="() => HoverIcon(2, false)">
                <MudIcon Icon="@Icons.Material.Outlined.Groups" Style="@($"color:{iconColors[2]};")"/>
                
                <p class="text_Navmenu" style="@($"color:{iconColors[2]};")">Grupos</p>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All"
                     @onmouseover="() => HoverIcon(3, true)"
                     @onmouseout="() => HoverIcon(3, false)">
                <MudIcon Icon="@Icons.Material.Outlined.Logout" Style="@($"color:{iconColors[3]};")"/>
                <p class="text_Navmenu" style="@($"color:{iconColors[3]};")" href="javascript:void(0)">Cerrar Sesión</p>
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private Dictionary<int, string> iconColors = new Dictionary<int, string>
    {
        {1, RiwiPalette.Primary500},
        {2, RiwiPalette.Primary500},
        {3, RiwiPalette.Primary500}
    };

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void HoverIcon(int iconId, bool isHovered)
    {
        iconColors[iconId] = isHovered ? RiwiPalette.Secondary500 : RiwiPalette.Primary500;
    }
}

